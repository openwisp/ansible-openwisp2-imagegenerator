- name: Extract copies of imagebuilder archives
  shell: |
    if [ -f "{{ openwisp2fw_generator_dir }}/{{ item.system }}-{{ item.subtarget|default('generic') }}.tar.zst" ]; then
      tar --use-compress-program=unzstd -xf "{{ openwisp2fw_generator_dir }}/{{ item.system }}-{{ item.subtarget|default('generic') }}.tar.zst" -C "{{ openwisp2fw_generator_dir }}"
    elif [ -f "{{ openwisp2fw_generator_dir }}/{{ item.system }}-{{ item.subtarget|default('generic') }}.tar.xz" ]; then
      tar -xJf "{{ openwisp2fw_generator_dir }}/{{ item.system }}-{{ item.subtarget|default('generic') }}.tar.xz" -C "{{ openwisp2fw_generator_dir }}"
    else
      tar -xzf "{{ openwisp2fw_generator_dir }}/{{ item.system }}-{{ item.subtarget|default('generic') }}.tar.gz" -C "{{ openwisp2fw_generator_dir }}"
    fi
  args:
    executable: /bin/bash
    creates: "{{ openwisp2fw_generator_dir }}/.archive-{{ item.system }}-{{ item.subtarget|default('generic') }}-created"
  with_items: "{{ openwisp2fw_source_targets }}"

- name: Find imagebuilder archive files
  find:
    paths: "{{ openwisp2fw_generator_dir }}"
    patterns: "{{ item.system }}-{{ item.subtarget | default('generic') }}.tar.*"
    use_regex: true  # Use regex to match the patterns
  register: found_files
  with_items: "{{ openwisp2fw_source_targets }}"

- name: Remove found imagebuilder archive files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ found_files.results | selectattr('files', 'defined') | map(attribute='files') | list | flatten }}"

- name: Rename ImageBuilder dirs to the name of their corresponding target system
  shell: >
    {% if item.subtarget is defined %}
        {% set partial = '{0}-{1}'.format(item['system'], item['subtarget']) %}
    {% else %}
        {% set partial = item['system'] %}
    {% endif %}
    mv *-{{ partial }}* {{ item.system }}-{{ item.subtarget|default('generic') }}
  args:
    chdir: "{{ openwisp2fw_generator_dir }}"
    creates: "{{ openwisp2fw_generator_dir }}/{{ item.system }}-{{ item.subtarget|default('generic') }}"
  with_items: "{{ openwisp2fw_source_targets }}"
